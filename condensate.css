@charset "UTF-8";
/*
-------------------------------------------------------------------------------
Condensate CSS
Version: 0.1
Licensed under MIT
-------------------------------------------------------------------------------
The above notice must be included in its entirety when this file is used.

Table of contents:
  0.  Normalize CSS -------------------------------------------- [sec-00]
  1.  CSS Variables -------------------------------------------- [sec-01]
  2.  Base Styles ---------------------------------------------- [sec-02]
  3.  Typography ----------------------------------------------- [sec-03]
  4.  Buttons, Inputs, Forms ----------------------------------- [sec-04]
  5.  Checkbox, Radio Buttons ---------------------------------- [sec-05]
  6.  Toggle Switch -------------------------------------------- [sec-06]
  7.  Table ---------------------------------------------------- [sec-07]
  8.  Summary, Details ----------------------------------------- [sec-08]
  9.  Scrollbar ------------------------------------------------ [sec-09]
  10. HBox, VBox, RBox ----------------------------------------- [sec-10]
  11. Header, Footer, Body ------------------------------------- [sec-11]
  12. Cards, Graphics, Heros ----------------------------------- [sec-12]
  13. Dropdown, Menu ------------------------------------------- [sec-13]
  14. Modal, close --------------------------------------------- [sec-14]
  15. Captioned ------------------------------------------------ [sec-15]
  16. Tabbed --------------------------------------------------- [sec-16]
  17. Sidebar -------------------------------------------------- [sec-17]
  18. Utility -------------------------------------------------- [sec-18]
*/

/*
-------------------------------------------------------------------------------
0.  Normalize CSS [sec-00]

  Notes:
  - modern-normalize v2.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize
  - Modified for use with Condensate CSS
  - Comments have been removed
-------------------------------------------------------------------------------
*/

*,
::before,
::after {
    box-sizing: border-box;
}

html {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
}

body {
    margin: 0;
}

hr {
    height: 0;
    color: inherit;
}

abbr[title] {
    text-decoration: underline dotted;
}

b,
strong {
    font-weight: bolder;
}

code,
kbd,
samp,
pre {
    font-size: 100%;
}

small {
    font-size: 80%;
}

sub,
sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

table {
    text-indent: 0;
    border-color: inherit;
}

button,
input,
optgroup,
select,
textarea {
    font-family: inherit;
    font-size: 100%;
    margin: 0;
}

button,
select {
    text-transform: none;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

:-moz-focusring {
    outline: 1px dotted ButtonText;
}

:-moz-ui-invalid {
    box-shadow: none;
}

legend {
    padding: 0;
}

progress {
    vertical-align: baseline;
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
    height: auto;
}

[type="search"] {
    -webkit-appearance: textfield;
    outline-offset: -2px;
}

::-webkit-color-swatch-wrapper {
    padding: 0;
}

::-webkit-search-decoration {
    -webkit-appearance: none;
}

::-webkit-file-upload-button {
    -webkit-appearance: button;
    font: inherit;
}

summary {
    display: list-item;
}

:root {
    -webkit-tap-highlight-color: transparent;
}

/*
-------------------------------------------------------------------------------
1.  CSS Variables [sec-01]
-------------------------------------------------------------------------------
*/
:root {
    color-scheme: light dark;
    --font-size: 1.1rem;
    --font-family: sans-serif;
    --header-font-family: var(--font-family);
    --mono-font-family: monospace;
    --border-radius: 0.4rem;
    --border-width: 3px;
    --input-border: 0;
    --button-border: var(--input-border);
    --panel-border: 0;
    --button-border-radius: var(--border-radius);
    --spacing: 0.6rem;
    --dm-font-color: #ddd;
    --dm-alt-font-color: #000;
    --dm-check-color: #fff;
    --dm-bg-color: #282a36;
    --dm-bg2-color: #2f3240;
    --dm-fg-color: #44475a;
    --dm-primary-color: #6969ff;
    --dm-secondary-color: #2cb1ff;
    --dm-success-color: #3bf589;
    --dm-warning-color: #f5c33b;
    --dm-error-color: #f53b3b;
    --dm-border-color: var(--dm-fg-color);
    --dm-hover-brightness: 130%;
    --dm-alt-hover-brightness: 75%;
    --lm-font-color: #000;
    --lm-alt-font-color: #fff;
    --lm-check-color: #fff;
    --lm-bg-color: #fff;
    --lm-bg2-color: #fafafa;
    --lm-fg-color: #ddd;
    --lm-primary-color: #6969ff;
    --lm-secondary-color: #2cb1ff;
    --lm-success-color: #3bf589;
    --lm-warning-color: #f5c33b;
    --lm-error-color: #f53b3b;
    --lm-border-color: var(--lm-fg-color);
    --lm-hover-brightness: 105%;
    --lm-alt-hover-brightness: 88%;
}

@media (prefers-color-scheme: light) {
    :root {
        --bg-color: var(--lm-bg-color);
        --bg2-color: var(--lm-bg2-color);
        --fg-color: var(--lm-fg-color);
        --primary-color: var(--lm-primary-color);
        --secondary-color: var(--lm-secondary-color);
        --success-color: var(--lm-success-color);
        --warning-color: var(--lm-warning-color);
        --error-color: var(--lm-error-color);
        --border-color: var(--lm-border-color);
        --font-color: var(--lm-font-color);
        --alt-font-color: var(--lm-alt-font-color);
        --check-color: var(--lm-check-color);
        --hover-brightness: var(--lm-hover-brightness);
        --alt-hover-brightness: var(--lm-alt-hover-brightness);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --bg-color: var(--dm-bg-color);
        --bg2-color: var(--dm-bg2-color);
        --fg-color: var(--dm-fg-color);
        --primary-color: var(--dm-primary-color);
        --secondary-color: var(--dm-secondary-color);
        --success-color: var(--dm-success-color);
        --warning-color: var(--dm-warning-color);
        --error-color: var(--dm-error-color);
        --border-color: var(--dm-border-color);
        --font-color: var(--dm-font-color);
        --alt-font-color: var(--dm-alt-font-color);
        --check-color: var(--dm-check-color);
        --hover-brightness: var(--dm-hover-brightness);
        --alt-hover-brightness: var(--dm-alt-hover-brightness);
    }
}

.lm, :root:has(input[type="checkbox"].dm-toggle) {
    --bg-color: var(--lm-bg-color);
    --bg2-color: var(--lm-bg2-color);
    --fg-color: var(--lm-fg-color);
    --primary-color: var(--lm-primary-color);
    --secondary-color: var(--lm-secondary-color);
    --success-color: var(--lm-success-color);
    --warning-color: var(--lm-warning-color);
    --error-color: var(--lm-error-color);
    --border-color: var(--lm-border-color);
    --font-color: var(--lm-font-color);
    --alt-font-color: var(--lm-alt-font-color);
    --check-color: var(--lm-check-color);
    --hover-brightness: var(--lm-hover-brightness);
    --alt-hover-brightness: var(--lm-alt-hover-brightness);
}

.dm, :root:has(input[type="checkbox"].dm-toggle:checked) {
    --bg-color: var(--dm-bg-color);
    --bg2-color: var(--dm-bg2-color);
    --fg-color: var(--dm-fg-color);
    --primary-color: var(--dm-primary-color);
    --secondary-color: var(--dm-secondary-color);
    --success-color: var(--dm-success-color);
    --warning-color: var(--dm-warning-color);
    --error-color: var(--dm-error-color);
    --border-color: var(--dm-border-color);
    --font-color: var(--dm-font-color);
    --alt-font-color: var(--dm-alt-font-color);
    --check-color: var(--dm-check-color);
    --hover-brightness: var(--dm-hover-brightness);
    --alt-hover-brightness: var(--dm-alt-hover-brightness);
}

/*
-------------------------------------------------------------------------------
2.  Base styles [sec-02]
-------------------------------------------------------------------------------
*/
@font-face {
    font-family: "Material Symbols Outlined";
    src: url("../fonts/MaterialSymbolsOutlined/MaterialSymbolsOutlined.ttf");
}

::selection {
    background: var(--primary-color);
    filter: invert(100%);
}

body {
    background: var(--bg-color);
}

* {
    margin: 0;
    padding: 0;
    color: var(--font-color);
    font-family: var(--font-family);
    font-size: var(--font-size);
    border-style: solid;
    border-color: var(--border-color);
    border-width: 0;
    vertical-align: middle;
}

:not(input, button, .button) {
    line-height: 1.5;
}

title, h1, h2, h3, h4, h5, h6, p, b, i, strong, em, small, big, sup, sub, time, abbr, span {
    color: inherit;
}

/*
-------------------------------------------------------------------------------
3.  Typography [sec-03]
-------------------------------------------------------------------------------
*/

title {
    font-size: calc(3 * var(--font-size));
    font-weight: bold;
}

p {
    text-align: justify;
    text-justify: inter-word;
}

a {
    color: var(--primary-color);
    cursor: pointer;
    text-decoration: none;
}

a:not(.button):hover {
    text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: bold;
    font-family: var(--header-font-family);
    font-size: large;
}

ul, ol {
    padding-left: calc(4 * var(--spacing));
}

code, kbd {
    background: var(--bg2-color);
    padding-top: calc(0.3 * var(--spacing));
    padding-bottom: calc(0.3 * var(--spacing));
    padding-left: calc(0.8 * var(--spacing));
    padding-right: calc(0.8 * var(--spacing));
    border-radius: var(--border-radius);
    font-family: var(--mono-font-family);
    overflow-x: scroll;
    border-width: var(--panel-border);
}

:is(code, kbd) > * {
    font-family: var(--mono-font-family);
}

.vbox > kbd {
    align-self: flex-start;
}

hr {
    border-bottom-width: var(--border-width);
}

.vr {
    border-right-width: var(--border-width);
}

ins {
    color: var(--success-color);
}

del {
    color: var(--error-color);
}

.font-xxl {
    font-size: calc(3 * var(--font-size));
}

.font-xl {
    font-size: calc(2 * var(--font-size));
}

.font-lg, big {
    font-size: calc(1.25 * var(--font-size));
}

.font-md {
    font-size: var(--font-size);
}

.font-sm, small {
    font-size: calc(0.75 * var(--font-size));
}

.monospace {
    font-family: var(--mono-font-family);
}

.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

.underline {
    text-decoration: underline;
}

.strike-through {
    text-decoration: line-through;
}

/*
-------------------------------------------------------------------------------
4.  Buttons, Inputs, Forms [sec-04]
-------------------------------------------------------------------------------
*/

select, textarea, input:not([type="checkbox"], [type="radio"], [type="range"]), button, .button {
    color: var(--font-color);
    border-radius: var(--border-radius);
    background: var(--fg-color);
    padding-top: calc(0.4 * var(--spacing));
    padding-bottom: calc(0.4 * var(--spacing));
    padding-left: var(--spacing);
    padding-right: var(--spacing);
}

select, textarea, input:not([type="checkbox"], [type="radio"], [type="range"]) {
    border-width: var(--input-border);
}

select:focus, textarea:focus, input:focus:not([type="checkbox"], [type="radio"], [type="range"]) {
    outline: 2px solid var(--primary-color);
}

.pill {
    border-radius: 1.5em;
}

button, .button {
    user-select: none;
    display: inline-block;
    box-sizing: content-box;
    border-radius: var(--button-border-radius);
    text-decoration: none;
    cursor: pointer;
    border-width: var(--button-border);
}

.vbox > :is(button, .button) {
    align-self: flex-start;
}

@media (max-aspect-ratio: 1.2) {
    .rbox > :is(button, .button) {
        align-self: flex-start;
    }
}

button:hover, .button:hover {
    filter: brightness(var(--hover-brightness));
}

button:focus, .button:focus {
    outline: none;
}

input[type="number"]::-webkit-inner-spin-button {
    color: var(--bg2-color);
}
input[type="color"] {
    padding: 5px;
    cursor: pointer;
}
input[type="color"]::-webkit-color-swatch {
    border: none;
}
input[type="color"]::-moz-color-swatch {
    border: none;
}

input:is([type="radio"], [type="checkbox"]) {
    cursor: pointer;
}

::placeholder {
    color: var(--font-color);
    opacity: 0.5;
}

:-ms-input-placeholder {
    color: var(--font-color);
    opacity: 0.5;
}

select {
    cursor: pointer;
}

details > :not(summary) {
    margin-left: 0.8em;
}

/*
-------------------------------------------------------------------------------
5.  Checkbox & Radio Buttons [sec-5]
-------------------------------------------------------------------------------
*/

@keyframes checkbox-like-pulse {
    0% {
        outline-width: 0;
    }
    50% {
        outline-width: 3px;
    }
    100% {
        outline-width: 0px;
    }
}

@keyframes checkbox-border-color {
    0% {
        border-color: var(--border-color);
    }
    1% {
        border-color: var(--primary-color);
    }
    99% {
        border-color: var(--primary-color);
    }
    100% {
        border-color: var(--border-color);
    }
}

@keyframes checkbox-check-grow {
    0% {
        scale: 0;
        left: 40%;
        top: 50%;
        transform: translate(-50%, -50%)  rotate(-45deg);
    }
    100% {
        scale: 1;
        left: 50%;
        top: 40%;
        transform: translate(-50%, -50%)  rotate(45deg);
    }
}

input[type="radio"],
input[type="checkbox"] {
    box-sizing: content-box;
    margin-left: 0.5em;
    margin-right: 0.5em;
}

input[type="radio"],
input[type="checkbox"]:not(.switch, .dm-toggle) {
    box-sizing: border-box;
    outline: 0 solid var(--primary-color);
    width: 1em;
    height: 1em;
    background: var(--bg2-color);
    border-width: var(--border-width);
    appearance: none;
}
input[type="radio"]:checked,
input[type="checkbox"]:checked:not(.switch, .dm-toggle) {
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
}
input[type="radio"]:checked {
    animation-name: checkbox-like-pulse;
}
input[type="checkbox"]:checked:not(.switch, .dm-toggle) {
    animation-name: checkbox-like-pulse, checkbox-border-color;
}
input[type="checkbox"]:not(.switch, .dm-toggle) {
    position: relative;
    border-radius: 0.2em;
}
input[type="checkbox"]:not(.switch, .dm-toggle):checked {
    background-color: var(--primary-color);
    border-width: var(--input-border);
}
input[type="checkbox"]:not(.switch, .dm-toggle)::before {
    content: "";
    position: absolute;
    border-width: var(--border-width);
    border-color: var(--check-color);
    border-bottom-style: solid;
    border-right-style: solid;
    width: 0.4em;
    height: 0.65em;
    scale: 0;
}
input[type="checkbox"]:not(.switch, .dm-toggle):checked::before {
    animation-name: checkbox-check-grow;
    animation-duration: 0.2s;
    animation-fill-mode: forwards;
}
input[type="radio"] {
    position: relative;
    border-radius: 0.8em;
}
input[type="radio"]:checked {
    border-width: var(--border-width);
    border-color: var(--primary-color);
}
input[type="radio"]::before {
    content: "";
    position: absolute;
    background: var(--primary-color);
    border-radius: 0;
    width: 0;
    height: 0;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    transition: 0.2s;
}
input[type="radio"]:checked::before {
    content: "";
    position: absolute;
    background: var(--primary-color);
    border-radius: 0.3em;
    width: 0.5em;
    height: 0.5em;
}

/*
-------------------------------------------------------------------------------
6.  Toggle Switch [sec-6]
-------------------------------------------------------------------------------
*/
input[type="checkbox"].switch {
    background: var(--fg-color);
    border-width: var(--input-border);
    appearance: none;
    border-radius: 1em;
    height: 1em;
    width: 1.75em;
    position: relative;
}
input[type="checkbox"].switch::before {
    position: absolute;
    content: "";
    background: var(--check-color);
    border-radius: 1em;
    height: 80%;
    aspect-ratio: 1;
    top: 50%;
    transform: translate(0, -50%);
    left: 7%;
    transition: 0.3s;
}

input[type="checkbox"].switch:checked::before {
    transform: translate(90%, -50%);
}

input[type="checkbox"].switch:checked {
    background: var(--primary-color);
}

input[type="checkbox"].dm-toggle::before {
    content: "☀️";
    font-size: 60%;
    text-align: center;
    line-height: 122%;
    padding-top: 0.05em;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 0 var(--font-color);
}

input[type="checkbox"].dm-toggle:checked::before {
    content: "🌛";
}

input[type="checkbox"].dm-toggle.switch {
    background: var(--font-color);
}

input[type="checkbox"].dm-toggle.switch::before {
    background: var(--fg-color);
}

input[type="checkbox"].dm-toggle:not(.switch) {
    appearance: none;
}

input[type="checkbox"].dm-toggle:not(.switch)::before {
    font-size: 1.2em;
    line-height: 100%;
}

/*
-------------------------------------------------------------------------------
7. Table [sec-07]
-------------------------------------------------------------------------------
*/
tr:first-child {
    background: var(--fg-color);
}

table {
    border-radius: var(--border-radius);
    border-width: var(--border-width);
    border-spacing: 0;
}

td {
    padding: calc(0.4 * var(--spacing)) var(--spacing);
    border-top-width: var(--border-width);
    border-left-width: var(--border-width);
}

th {
    padding: calc(0.4 * var(--spacing)) var(--spacing);
}

td:first-child {
    border-left: none;
}

/*
-------------------------------------------------------------------------------
8.  Summary, Details [sec-8]
-------------------------------------------------------------------------------
*/

summary {
    cursor: pointer;
    list-style: none;
    position: relative;
    padding-left: 1em;
}

summary::before {
    content: "";
    width: 0.5em;
    height: 0.5em;
    border-right-style: solid;
    border-bottom-style: solid;
    border-color: var(--font-color);
    position: absolute;
    top: 0.5em;
    left: 0;
    transition: 0.4s;
    transform-origin: center center;
    transform: rotate(-45deg);
}

details > :not(summary) {
    margin-left: 1em;
}

details[open] > summary::before {
    transform: rotate(45deg);
}

details[open] > :not(summary) {
    overflow: hidden;
    animation: details-expand-animation 1s;
}

@keyframes details-expand-animation {
    0% {
        max-height: 1em;
    }
    99% {
        max-height: 2000px;
    }
    100% {
        max-height: none;
    }
}

/*
-------------------------------------------------------------------------------
9.  Scrollbar [sec-09]
-------------------------------------------------------------------------------
*/
::-webkit-scrollbar {
    width: 5px;
}

::-webkit-scrollbar-track {
    background-color: var(--bg2-color);
}

::-webkit-scrollbar-thumb {
    background: var(--fg-color);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--fg-color);
}

* {
    scrollbar-color: var(--fg-color) var(--bg2-color);
}

.scroll-x {
    overflow-x: scroll;
}

.scroll-y {
    overflow-y: scroll;
}

.hbox > header + .scroll-x {
    margin-left: calc(-1 * var(--spacing));
}

.hbox > .scroll-x:has(+ footer) {
    margin-right: calc(-1 * var(--spacing));
}

.vbox > header + .scroll-y {
    margin-top: calc(-1 * var(--spacing));
}

.vbox > .scroll-y:has(+ footer) {
    margin-bottom: calc(-1 * var(--spacing));
}

/*
-------------------------------------------------------------------------------
10. HBox, VBox, RBox [sec-10]
-------------------------------------------------------------------------------
*/

:is(.hbox, .vbox, .rbox) > :is(a, button, input) {
    flex-shrink: 0;
}

:is(.hbox, .vbox, .rbox) > .center {
    align-self: center;
}

:is(.hbox, .vbox, .rbox) > .stretch {
    align-self: stretch;
}

:is(.vbox, .hbox, .rbox) > :is(.left, .top) {
    align-self: flex-start;
}

:is(.vbox, .hbox, .rbox) > :is(.right, .bottom) {
    align-self: flex-end;
}

.items-center {
    align-items: center;
}

.items-stretch {
    align-items: stretch;
}

.items-left,
.items-top {
    align-items: flex-start;
}

.items-right,
.items-bottom {
    align-items: flex-end;
}

.hbox,
.vbox,
.rbox {
    display: flex;
    gap: var(--spacing);
}

.vbox {
    flex-direction: column;
}

.hbox {
    flex-direction: row;
}

@media (min-aspect-ratio: 1.2) {
    .rbox {
        flex-direction: row;
    }
}

@media (max-aspect-ratio: 1.2) {
    .rbox {
        flex-direction: column;
    }
}

.spacer {
    flex-grow: 1;
}

/*
-------------------------------------------------------------------------------
11. Header, Footer, Body [sec-11]
-------------------------------------------------------------------------------
*/

header, footer {
    background: var(--fg-color);
    padding: var(--spacing);
}

header.hbox, footer.hbox {
    align-items: center;
}

header {
    border-bottom-width: var(--panel-border);
}

footer {
    border-top-width: var(--panel-border);
}

.hbox:is(.card, .padding) > header {
    margin-top: calc(-1 * var(--spacing));
    margin-left: calc(-1 * var(--spacing));
    margin-bottom: calc(-1 * var(--spacing));
}

.vbox:is(.card, .padding) > header {
    margin-top: calc(-1 * var(--spacing));
    margin-left: calc(-1 * var(--spacing));
    margin-right: calc(-1 * var(--spacing));
}

.hbox:is(.card, .padding) > footer {
    margin-top: calc(-1 * var(--spacing));
    margin-right: calc(-1 * var(--spacing));
    margin-bottom: calc(-1 * var(--spacing));
}

.vbox:is(.card, .padding) > footer {
    margin-left: calc(-1 * var(--spacing));
    margin-right: calc(-1 * var(--spacing));
    margin-bottom: calc(-1 * var(--spacing));
}

@media (min-aspect-ratio: 1.2) {
    .rbox:is(.card, .padding) > header {
        margin-top: calc(-1 * var(--spacing));
        margin-left: calc(-1 * var(--spacing));
        margin-bottom: calc(-1 * var(--spacing));
    }
    .rbox:is(.card, .padding) > footer {
        margin-top: calc(-1 * var(--spacing));
        margin-right: calc(-1 * var(--spacing));
        margin-bottom: calc(-1 * var(--spacing));
    }
}

@media (max-aspect-ratio: 1.2) {
    .rbox:is(.card, .padding) > header {
        margin-top: calc(-1 * var(--spacing));
        margin-left: calc(-1 * var(--spacing));
        margin-right: calc(-1 * var(--spacing));
    }
    .rbox:is(.card, .padding) > footer {
        margin-left: calc(-1 * var(--spacing));
        margin-right: calc(-1 * var(--spacing));
        margin-bottom: calc(-1 * var(--spacing));
    }
}

/*
-------------------------------------------------------------------------------
12. Cards, Graphics, Heros [sec-12]
-------------------------------------------------------------------------------
*/
.card {
    border-width: var(--border-width);
    border-radius: var(--border-radius);
    background: var(--bg2-color);
    padding: var(--spacing);
}

.graphic {
    overflow-y: hidden;
    position: relative;
}

.graphic > * {
    position: absolute;
}

.graphic > .left {
    left: 10%;
}

.graphic > .right {
    right: 10%;
}

.graphic > .top {
    top: 10%;
}

.graphic > .bottom {
    bottom: 10%;
}

.graphic > :is(.left, .right).center {
    top: 50%;
    transform: translate(0, -50%);
}

.graphic > :is(.top, .bottom).center {
    left: 50%;
    transform: translate(-50%, 0);
}

.graphic > :not(.left, .right, .top, .bottom).center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.hero {
    background-size: cover;
    background-position: center;
    min-height: 100%;
    min-width: 100%;
}

/*
-------------------------------------------------------------------------------
13. Dropdown, Menu [sec-13]
-------------------------------------------------------------------------------
*/

details.dropdown {
    position: relative;
}

details.dropdown > :not(summary):not(.menu) {
    padding: var(--spacing);
}

details.dropdown > :not(summary) {
    border-radius: var(--border-radius);
    background: var(--fg-color);
    border-width: var(--panel-border);
    position: absolute;
    left: 0;
    z-index: 1;
}

details.dropdown > :not(summary).right {
    right: 0;
    left: auto;
}

.menu {
    gap: 0;
}

.hbox > .menu {
    margin-top: calc(-1 * var(--spacing));
    margin-bottom: calc(-1 * var(--spacing));
}

.vbox > .menu {
    margin-left: calc(-1 * var(--spacing));
    margin-right: calc(-1 * var(--spacing));
}

.menu > :is(button, .button, a) {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing);
    border-radius: 0;
}

.menu {
    align-self: stretch;
}

.menu > * {
    box-sizing: border-box;
}

.hbox.menu > :is(button, .button):not(:first-child) {
    border-left-width: 0;
}

.vbox.menu > :is(button, .button):not(:first-child) {
    border-top-width: 0;
}

.hbox.menu > :is(button, .button, a) {
    height: 100%;
}

.vbox.menu > :is(button, .button, a) {
    width: 100%;
}

@media (min-aspect-ratio: 1.2) {
    .rbox > :is(button, .button):not(:first-child) {
        border-left-width: 0;
        height: 100%;
    }
    .rbox.menu > :is(button, .button, a) {
        height: 100%;
    }
    .menu > :is(button, .button, a) {
        min-width: 7em;
    }
    details.dropdown > :not(summary) {
        min-width: 10em;
    }
}

@media (max-aspect-ratio: 1.2) {
    .rbox > :is(button, .button):not(:first-child) {
        border-top-width: 0;
        width: 100%;
    }
    .rbox.menu > :is(button, .button, a) {
        width: 100%;
    }
}

/*
-------------------------------------------------------------------------------
14. Modal, Close [sec-14]
-------------------------------------------------------------------------------
*/
.modal {
    visibility: hidden;
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    z-index: 99;
    backdrop-filter: blur(10px) brightness(80%);
}
.modal:target {
    visibility: visible;
}

.close {
    width: 2em;
    height: 2em;
    position: relative;
    appearance: none;
    background: none;
}
.close:hover {
    filter: brightness(150%);
}
.close::before {
    content: "";
    border-style: solid;
    border-color: var(--font-color);
    border-width: var(--border-width) 0 0 0;
    position: absolute;
    top: 0.85em;
    left: 0.35em;
    height: 0;
    width: 1.3em;
    transform-origin: center;
    transform: rotate(45deg);
}
.close::after {
    content: "";
    border-style: solid;
    border-color: var(--font-color);
    border-width: var(--border-width) 0 0 0;
    position: absolute;
    top: 0.85em;
    left: 0.35em;
    height: 0;
    width: 1.3em;
    transform-origin: center;
    transform: rotate(-45deg);
}

/*
-------------------------------------------------------------------------------
15. Captioned [sec-15]
-------------------------------------------------------------------------------
*/

.captioned {
    display: table;
    width: 1px;
}

.captioned > .caption {
    display: table-caption;
    caption-side: bottom;
    text-justify: inter-word;
}

.captioned > .caption.left {
    caption-side: left;
}

.captioned > .caption.right {
    caption-side: right;
}

.captioned > .caption.top {
    caption-side: top;
}

/*
-------------------------------------------------------------------------------
16.  Tabbed [sec-16]
  Notes:
  - Based on this neat css only tabs concept by Michał Pawełczyk:
    https://codepen.io/MPDoctor/pen/mpJdYe
-------------------------------------------------------------------------------
*/
.tabbed > input[type="radio"] {
    display: none;
}

.tabbed > .tabs {
    display: flex;
}

.tabbed > .tabs > label {
    background: var(--fg-color);
    margin-bottom: calc(-1 * var(--border-width));
    padding: 0 var(--spacing);
    border-top-width: var(--panel-border);
    border-right-width: var(--panel-border);
}

.tabbed > .tabs > label:hover {
    filter: brightness(var(--hover-brightness));
    cursor: pointer;
}

.tabbed > .tabs > label:first-of-type {
    border-top-left-radius: 2px;
}

.tabbed > .tabs > label:last-of-type {
    border-top-right-radius: 2px;
}

.tabbed > .tab-panel {
    display: none;
    background: var(--bg2-color);
    border-radius: var(--border-radius);
    border-top-left-radius: 0;
    border-top-width: var(--border-width);
}

.tabbed.overlay {
    position: relative;
}

.tabbed.overlay > .tab-panel {
    position: absolute;
    width: 100%;
}

.tabbed > input[type="radio"]:nth-of-type(1):checked ~ .tabs > label:nth-of-type(1),
.tabbed > input[type="radio"]:nth-of-type(2):checked ~ .tabs > label:nth-of-type(2),
.tabbed > input[type="radio"]:nth-of-type(3):checked ~ .tabs > label:nth-of-type(3),
.tabbed > input[type="radio"]:nth-of-type(4):checked ~ .tabs > label:nth-of-type(4),
.tabbed > input[type="radio"]:nth-of-type(5):checked ~ .tabs > label:nth-of-type(5),
.tabbed > input[type="radio"]:nth-of-type(6):checked ~ .tabs > label:nth-of-type(6),
.tabbed > input[type="radio"]:nth-of-type(7):checked ~ .tabs > label:nth-of-type(7),
.tabbed > input[type="radio"]:nth-of-type(8):checked ~ .tabs > label:nth-of-type(8),
.tabbed > input[type="radio"]:nth-of-type(9):checked ~ .tabs > label:nth-of-type(9),
.tabbed > input[type="radio"]:nth-of-type(10):checked ~ .tabs > label:nth-of-type(10) {
    background: var(--bg2-color);
    border-bottom: 2px solid var(--bg2-color);
}
.tabbed > input[type="radio"]:nth-of-type(1):checked ~ .tab-panel:nth-child(5),
.tabbed > input[type="radio"]:nth-of-type(2):checked ~ .tab-panel:nth-child(6),
.tabbed > input[type="radio"]:nth-of-type(3):checked ~ .tab-panel:nth-child(7),
.tabbed > input[type="radio"]:nth-of-type(4):checked ~ .tab-panel:nth-child(8),
.tabbed > input[type="radio"]:nth-of-type(5):checked ~ .tab-panel:nth-child(9),
.tabbed > input[type="radio"]:nth-of-type(6):checked ~ .tab-panel:nth-child(10),
.tabbed > input[type="radio"]:nth-of-type(7):checked ~ .tab-panel:nth-child(11),
.tabbed > input[type="radio"]:nth-of-type(8):checked ~ .tab-panel:nth-child(12),
.tabbed > input[type="radio"]:nth-of-type(9):checked ~ .tab-panel:nth-child(13),
.tabbed > input[type="radio"]:nth-of-type(10):checked ~ .tab-panel:nth-child(14) {
    display: block;
}

/*
-------------------------------------------------------------------------------
17.  Sidebar [sec-17]
-------------------------------------------------------------------------------
*/

:is(.vbox, .hbox, .rbox) > details.sidebar {
    margin-right: calc(-1 * var(--spacing));
}
details.sidebar {
    position: relative;
}
details.sidebar > *:not(summary) {
    margin: 0;
    background: var(--bg2-color);
    height: 100%;
    border-right-width: var(--panel-border);
}
details.sidebar > summary {
    display: block;
    appearance: none;
    position: absolute;
    padding: 0;
    width: 2em;
    height: 2em;
    top: var(--spacing);
    left: var(--spacing);
}
details.sidebar > summary::before {
    content: "";
    position: absolute;
    top: 0.5em;
    left: 0.5em;
    width: 1em;
    height: calc(0.5em + 0.5 * var(--border-width));
    transition: 0.4s;
    transform: none;
    border-color: var(--font-color);
    border-width: var(--border-width) 0 var(--border-width) 0;
    border-style: solid;
}
details.sidebar > summary::after {
    content: "";
    position: absolute;
    top: 1em;
    left: 0.5em;
    width: 1em;
    height: 0.5em;
    transition: 0.4s;
    border-color: var(--font-color);
    border-bottom-width: var(--border-width);
    border-bottom-style: solid;
}
@media (min-aspect-ratio: 1.2) {
    details.sidebar[open] {
        overflow: hidden;
        animation: sidebar-expand-animation 0.4s;
        min-width: 17em;
    }
    @keyframes sidebar-expand-animation {
        0% {
            min-width: 0;
            max-width: 0;
        }
        99% {
            min-width: 17em;
            max-width: 2000px;
        }
        100% {
            min-width: 17em;
            max-width: none;
        }
    }
}
@media (max-aspect-ratio: 1.2) {
    details.sidebar[open] {
        overflow: hidden;
        animation: sidebar-expand-animation 0.4s;
        min-width: 80vw;
    }
    @keyframes sidebar-expand-animation {
        0% {
            min-width: 0;
            max-width: 0;
        }
        99% {
            min-width: 80vw;
            max-width: 2000px;
        }
        100% {
            min-width: 80vw;
            max-width: none;
        }
    }
}
details.sidebar[open] > summary {
    left: calc(100% - 2em - var(--spacing));
}
details.sidebar[open] > summary::before {
    top: 0.95em;
    left: 0.35em;
    border-bottom-style: none;
    height: 0;
    width: 1.3em;
    transition: 0.4s 0.2s;
    transform-origin: center;
    transform: rotate(45deg);
}
details.sidebar[open] > summary::after {
    top: 0.95em;
    left: 0.35em;
    height: 0;
    width: 1.3em;
    transition: 0.4s 0.2s;
    transform-origin: center;
    transform: rotate(-45deg);
}
details.sidebar[open] > :not(summary) {
    animation: none;
}

details.sidebar:not([open]) ~ * > header {
    padding-left: 2.5em;
}

/*
-------------------------------------------------------------------------------
18. Utility [sec-18]
-------------------------------------------------------------------------------
*/

:is(.hbox, .vbox, .rbox, *).no-gap {
    gap: 0;
}

.bg {
    background: var(--bg-color);
}

.bg2 {
    background: var(--bg2-color);
}

.fg {
    background: var(--fg-color);
}

.font-alt {
    color: var(--alt-font-color);
}

:not(button, .button).primary {
    border-color: var(--primary-color);
    color: var(--primary-color);
}

:not(button, .button).secondary {
    border-color: var(--secondary-color);
    color: var(--secondary-color);
}

:not(button, .button).success {
    border-color: var(--success-color);
    color: var(--success-color);
}

:not(button, .button).warning {
    border-color: var(--warning-color);
    color: var(--warning-color);
}

:not(button, .button).error {
    border-color: var(--error-color);
    color: var(--error-color);
}

:is(button, .button):is(.primary, .secondary, .success, .warning, .error):hover {
    filter: brightness(var(--alt-hover-brightness));
}

:is(button, .button, header, footer):is(.primary, .secondary, .success, .warning, .error) {
    color: var(--alt-font-color);
}

:is(button, .button, header, footer).primary {
    background: var(--primary-color);
}

:is(button, .button, header, footer).secondary {
    background: var(--secondary-color);
}

:is(button, .button, header, footer).success {
    background: var(--success-color);
}

:is(button, .button, header, footer).warning {
    background: var(--warning-color);
}

:is(button, .button, header, footer).error {
    background: var(--error-color);
}

.card:is(.primary, .secondary, .success, .warning, .error) > :is(header, footer)  {
    color: var(--alt-font-color);
}

.card.primary > :is(header, footer) {
    background: var(--primary-color);
}

.card.secondary > :is(header, footer) {
    background: var(--secondary-color);
}

.card.success > :is(header, footer) {
    background: var(--success-color);
}

.card.warning > :is(header, footer) {
    background: var(--warning-color);
}

.card.error > :is(header, footer) {
    background: var(--error-color);
}

.square {
    height: 1.5em;
    width: 1.5em;
    text-align: center;
    padding: 0;
}

.circle {
    border-radius: 50%;
    height: 1.5em;
    width: 1.5em;
    text-align: center;
    padding: 0;
}

.icon {
    text-shadow: 0 0 0 var(--font-color);
    -webkit-text-fill-color: transparent;
}

.no-padding {
    padding: 0;
}

.padding {
    padding: var(--spacing);
}

.padding-left {
    padding-left: var(--spacing);
}

.padding-right {
    padding-right: var(--spacing);
}

.padding-top {
    padding-top: var(--spacing);
}

.padding-bottom {
    padding-bottom: var(--spacing);
}

.no-margin {
    margin: 0;
}

.margin {
    margin: var(--spacing);
}

.margin-right {
    margin-right: var(--spacing);
}

.margin-left {
    margin-left: var(--spacing);
}

.margin-top {
    margin-top: var(--spacing);
}

.margin-bottom {
    margin-bottom: var(--spacing);
}

.rounded {
    border-radius: var(--border-radius);
}

.no-border {
    border: none;
}

.border {
    border-width: var(--border-width);
    border-radius: var(--border-radius);
}

.border-right {
    border-right-width: var(--border-width);
    border-radius: var(--border-radius);
}

.border-left {
    border-left-width: var(--border-width);
    border-radius: var(--border-radius);
}

.border-top {
    border-top-width: var(--border-width);
    border-radius: var(--border-radius);
}

.border-bottom {
    border-bottom-width: var(--border-width);
    border-radius: var(--border-radius);
}

.height-quarter {
    height: 25%;
}

.height-third {
    height: 33%;
}

.height-half {
    height: 50%;
}

.height-two-thirds {
    height: 66%;
}

.height-three-quarters {
    height: 75%;
}

.height-full {
    height: 100%;
}

.width-quarter {
    width: 25%;
}

.width-third {
    width: 33%;
}

.width-half {
    width: 50%;
}

.width-two-thirds {
    width: 66%;
}

.width-three-quarters {
    width: 75%;
}

.width-full {
    width: 100%;
}

.fullscreen {
    position: fixed;
    margin: 0;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
}

@media (prefers-color-scheme: dark) {
    .dm-hidden {
        visibility: hidden;
    }
    .dm-invert {
        -webkit-filter: invert(1);
        filter: invert(1);
    }
}

@media (prefers-color-scheme: light) {
    .lm-hidden {
        visibility: hidden;
    }
    .lm-invert {
        -webkit-filter: invert(1);
        filter: invert(1);
    }
}

.height-input {
    height: 1.5em;
}

.height-font-sm {
    height: calc(0.75 * var(--font-size));
}

.height-font {
    height: var(--font-size);
}

.height-font-lg {
    height: calc(1.25 * var(--font-size));
}

.height-font-xl {
    height: calc(2 * var(--font-size));
}

.height-font-xxl {
    height: calc(3 * var(--font-size));
}

.width-xs {
    width: 8vw;
}
.width-sm {
    width: 14vw;
}
.width-md {
    width: 25vw;
}
.width-lg {
    width: 45vw;
}
.width-xl {
    width: 80vw;
}

.height-xs {
    height: 8vh;
}
.height-sm {
    height: 14vh;
}
.height-md {
    height: 25vh;
}
.height-lg {
    height: 45vh;
}
.height-xl {
    height: 80vh;
}

@media (min-aspect-ratio: 1.2) {
    .landscape-hidden {
        display: none;
    }
}

@media (max-aspect-ratio: 1.2) {
    .width-md {
        width: 100%;
    }
    .width-lg {
        width: 100%;
    }
    .width-xl {
        width: 100%;
    }
    .portrait-hidden {
        display: none;
    }
}
